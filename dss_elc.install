<?php

/**
 * @file
 * Install hooks for this module.
 */

  /**
   * Create a one-to-one or one-to-many relationship between two entities using "entityreference"
   * @author griffinj@lafayette.edu
   * Use the constant "FIELD_CARDINALITY_UNLIMITED" for an unspecified degree of cardinality
   *
   */
function dss_elc_create_rel_field($field_name, $cardinality, $bundle_name, $label, $widget_name='options_select', $entity_type_name='node') {

  field_create_field(array(
			   'field_name' => $field_name,
			   'type' => 'entityreference',
			   'cardinality' => $cardinality,
			   'settings' => array(
					       'target_type' => $entity_type_name,
					       'handler_settings' => array('target_bundles' => array($bundle_name)),
					       ),
			   ));

  return field_create_instance(array(
				     'field_name' => $field_name,
				     'entity_type' => $entity_type_name,
				     'bundle' => $bundle_name,
				     'label' => $label,
				     'widget' => array(
						       'type' => $widget_name,
						       ),
				     'settings' => array(
							 'target_type' => $entity_type_name,
							 'handler_settings' => array('target_bundles' => array($bundle_name)),
							 ),
				     ));
  }

/**
 * Implements hook_install().
 * @author griffinj@lafayette.edu
 *
 */
function dss_elc_install() {
  module_load_include('inc', 'islandora', 'includes/solution_packs');

  if(!in_array('artifact', node_type_get_names())) {

    $type = node_type_set_defaults(array(
					 'type' => 'artifact',
					 'name' => t('Artifacts'),
					 'base' => 'node_content',
					 'title_label' => t('id'),
					 'description' => t('An element of material culture.'),
					 'custom' => TRUE,
					 )
				   );
    node_add_body_field($type, t('Notes'));

    // Create the Artifact Content Type
    $type->field_artifact_title = '';

    // Create the Taxonomy
    $type->field_artifact_type = '';

    $type->field_artifact_metadata = '';

    //$type->title_label = 'id';
    //$type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  if(!in_array('work', node_type_get_names())) {

    $type = node_type_set_defaults();
    
    $type->title_label = 'id';
    $type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  if(!in_array('expression', node_type_get_names())) {

    $type = node_type_set_defaults();
    
    $type->title_label = 'id';
    $type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  if(!in_array('manifestation', node_type_get_names())) {

    $type = node_type_set_defaults();
    
    $type->field_manifest_total_vol = '';
    $type->title_label = 'id';
    $type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  if(!in_array('item', node_type_get_names())) {

    $type = node_type_set_defaults();
    
    $type->field_item_volume = '';
    $type->field_item_total_volumes = '';
    $type->field_item_subject = '';
    $type->field_item_format = '';
    $type->field_item_number = '';
    $type->field_item_embodies = '';

    $type->title_label = 'id';
    $type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  if(!in_array('periodical', node_type_get_names())) {

    $type = node_type_set_defaults();
    
    $type->title_label = 'id';
    $type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  if(!in_array('book', node_type_get_names())) {

    $type = node_type_set_defaults();
    
    $type->title_label = 'id';
    $type->body_label = 'Notes';
    
    $status = node_type_save($type);
    
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  //islandora_install_solution_pack('dss_elc');
}

/**
 * Implements hook_uninstall().
 */
function dss_elc_uninstall() {
  module_load_include('inc', 'islandora', 'includes/solution_packs');
  //islandora_install_solution_pack('dss_elc', 'uninstall');
}
